/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.muni.fi.pv168.hotelmanager.gui;

import cz.muni.fi.pv168.hotelmanager.backend.Guest;
import cz.muni.fi.pv168.hotelmanager.backend.GuestManager;
import cz.muni.fi.pv168.hotelmanager.backend.GuestManagerImpl;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.sql.DataSource;
import javax.swing.SwingWorker;

/**
 *
 * @author xlysonek
 */
public class ChooseGuestPanel extends javax.swing.JPanel {

    /**
     * Creates new form ChooseGuestPanel
     */
    public ChooseGuestPanel(DataSource source) {
        this.source = source;
        initComponents();
        loadGuests();
    }

    public void update() {
        loadGuests();
    }

    private void loadGuests() {
        class LoadGuestsWorker extends SwingWorker<List<Guest>,Void> {
            @Override
            public List<Guest> doInBackground() {
                GuestManager m = new GuestManagerImpl(source);
                return m.getAllGuests();
            }

            @Override
            public void done() {
                try {
                    List<Guest> l = get();
                    loadGuests(l);
                }
                catch (ExecutionException e) {
                }
                catch (InterruptedException e) {
                    // can't happen
                }
            }
        }
        LoadGuestsWorker worker = new LoadGuestsWorker();
        worker.execute();
    }

    private void loadGuests(List<Guest> list) {
        GuestsTableModel model = (GuestsTableModel) tblGuests.getModel();
        model.deleteAll();
        for (Guest g : list) {
            model.addGuest(g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGuests = new javax.swing.JTable();

        jLabel1.setText("Name:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblGuests.setModel(new GuestsTableModel());
        tblGuests.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblGuests.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblGuests);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(btnSearch))
                        .addGap(0, 114, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String name = txtName.getText();
        class GuestSearchWorker extends SwingWorker<List<Guest>,Void> {
            @Override
            public List<Guest> doInBackground() {
                GuestManager m = new GuestManagerImpl(source);
                return m.getGuestByName(name);
            }

            @Override
            public void done() {
                try {
                    List<Guest> l = get();
                    loadGuests(l);
                }
                catch (ExecutionException e) {
                }
                catch (InterruptedException e) {
                    // can't happen
                }
            }
        }
        GuestSearchWorker worker = new GuestSearchWorker();
        worker.execute();
    }//GEN-LAST:event_btnSearchActionPerformed

    public Guest getGuest() {
        int row = tblGuests.getSelectedRow();
        if (row < 0) {
            return null;
        }
        else {
            GuestsTableModel model = (GuestsTableModel) tblGuests.getModel();
            return model.getRow(row);
        }
    }

    private DataSource source;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGuests;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
